{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nexport default function loadDb() {\n  return _loadDb.apply(this, arguments);\n}\n\nfunction _loadDb() {\n  _loadDb = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var firebase;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase = require('firebase/app');\n\n            require('firebase/database');\n\n            try {\n              firebase.initializeApp({\n                databaseURL: 'https://hacker-news.firebaseio.com'\n              });\n            } catch (err) {\n              // we skip the \"already exists\" message which is\n              // not an actual error when we're hot-reloading\n              if (!/already exists/.test(err.message)) {\n                console.error('Firebase initialization error', err.stack);\n              }\n            }\n\n            return _context.abrupt(\"return\", firebase.database().ref('v0'));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadDb.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/me/DEV/next-learn-demo/E2-lazy-loading-modules/lib/load-db.js"],"names":["loadDb","firebase","require","initializeApp","databaseURL","err","test","message","console","error","stack","database","ref"],"mappings":";;AAAA,wBAA8BA,MAA9B;AAAA;AAAA;;;;;2BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,QADO,GACIC,OAAO,CAAC,cAAD,CADX;;AAEbA,YAAAA,OAAO,CAAC,mBAAD,CAAP;;AAEA,gBAAI;AACFD,cAAAA,QAAQ,CAACE,aAAT,CAAuB;AACrBC,gBAAAA,WAAW,EAAE;AADQ,eAAvB;AAGD,aAJD,CAIE,OAAOC,GAAP,EAAY;AACZ;AACA;AACA,kBAAI,CAAC,iBAAiBC,IAAjB,CAAsBD,GAAG,CAACE,OAA1B,CAAL,EAAyC;AACvCC,gBAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CJ,GAAG,CAACK,KAAnD;AACD;AACF;;AAdY,6CAgBNT,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwB,IAAxB,CAhBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export default async function loadDb() {\n  const firebase = require('firebase/app')\n  require('firebase/database')\n\n  try {\n    firebase.initializeApp({\n      databaseURL: 'https://hacker-news.firebaseio.com'\n    })\n  } catch (err) {\n    // we skip the \"already exists\" message which is\n    // not an actual error when we're hot-reloading\n    if (!/already exists/.test(err.message)) {\n      console.error('Firebase initialization error', err.stack)\n    }\n  }\n\n  return firebase.database().ref('v0')\n}\n"]},"metadata":{},"sourceType":"module"}